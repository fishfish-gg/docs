import{_ as t,o as e,c as a,a as d}from"./app.b3e64ba9.js";const r={},h=d('<h1 id="api-docs" tabindex="-1"><a class="header-anchor" href="#api-docs" aria-hidden="true">#</a> API Docs</h1><p>The current base URL for all requests is:</p><p><code>https://api.fishfish.gg/v1/</code></p><h2 id="authentication" tabindex="-1"><a class="header-anchor" href="#authentication" aria-hidden="true">#</a> Authentication</h2><p>Some routes in the API require an authentication token. This token should be provided in the <code>Authorization</code> header. Currently any authenticated route will only be used internally within the organisation. It is documented publicly but not intended to be used by the public directly.</p><hr><h2 id="domains" tabindex="-1"><a class="header-anchor" href="#domains" aria-hidden="true">#</a> Domains</h2><h3 id="get-domains" tabindex="-1"><a class="header-anchor" href="#get-domains" aria-hidden="true">#</a> <code>GET /domains</code></h3><p>Get a list of domains for a specific category.</p><p>Query parameters:</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>category</td><td>string</td><td>phishing</td><td>The category of domains to fetch. See <a href="#categories">Categories</a>.</td></tr><tr><td>recent</td><td>bool</td><td>false</td><td>Whether to only return domains added within the last hour.</td></tr></tbody></table><p>Returns: A list of strings.</p><h3 id="post-domains" tabindex="-1"><a class="header-anchor" href="#post-domains" aria-hidden="true">#</a> <code>POST /domains</code></h3><p>Add a domain to the API. This is an authenticated route.</p><p>Request:</p><table><thead><tr><th>Name</th><th>Required</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>domain</td><td>yes</td><td>string</td><td>-</td><td>The domain to add.</td></tr><tr><td>category</td><td>no</td><td>string</td><td>&quot;phishing&quot;</td><td>The category of the domain.</td></tr><tr><td>apex</td><td>no</td><td>bool</td><td>false</td><td>Whether all subdomains of the apex fall under the category provided.</td></tr></tbody></table><p>Returns: A <a href="#domain">Domain</a> object with <code>meta</code> set to null.</p><h3 id="get-domains-domain" tabindex="-1"><a class="header-anchor" href="#get-domains-domain" aria-hidden="true">#</a> <code>GET /domains/:domain</code></h3><p>Get information about a specific domain.</p><p>Query parameters:</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>detailed</td><td>bool</td><td>false</td><td>Include domain metadata in the response.</td></tr></tbody></table><p>Returns: A <a href="#domain">Domain</a> object with <code>meta</code> set if <code>detailed</code> is <code>true</code>.</p><h3 id="patch-domains-domain" tabindex="-1"><a class="header-anchor" href="#patch-domains-domain" aria-hidden="true">#</a> <code>PATCH /domains/:domain</code></h3><p>Update a domain. This is an authenticated route.</p><p>Request:</p><table><thead><tr><th>Name</th><th>Required</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>category</td><td>no</td><td>string</td><td>-</td><td>The new category of the domain. See <a href="#categories">Categories</a>.</td></tr></tbody></table><p>Returns: A <a href="#domain">Domain</a> object with <code>meta</code> set to null.</p><h3 id="patch-domains-domain-metadata" tabindex="-1"><a class="header-anchor" href="#patch-domains-domain-metadata" aria-hidden="true">#</a> <code>PATCH /domains/:domain/metadata</code></h3><p>Update a domain&#39;s metadata. This is an authenticated route.</p><p>Request: A <a href="#domainmetadata">DomainMetadata</a> object.</p><p>Returns: A <a href="#domainmetadata">DomainMetadata</a> object.</p><h3 id="delete-domains-domain" tabindex="-1"><a class="header-anchor" href="#delete-domains-domain" aria-hidden="true">#</a> <code>DELETE /domains/:domain</code></h3><p>Delete a domain from the API. This is an authenticated route.</p><h2 id="urls" tabindex="-1"><a class="header-anchor" href="#urls" aria-hidden="true">#</a> URLs</h2><p>NOTE: All URLs with a <code>:url</code> parameter should have the provided URL given as a URL encoded string.</p><h3 id="get-urls" tabindex="-1"><a class="header-anchor" href="#get-urls" aria-hidden="true">#</a> <code>GET /urls</code></h3><p>Get a list of URLs for a specific category.</p><p>Query parameters:</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>category</td><td>string</td><td>phishing</td><td>The category of urls to fetch. See <a href="#categories">Categories</a>.</td></tr><tr><td>recent</td><td>bool</td><td>false</td><td>Whether to only return urls added within the last hour.</td></tr></tbody></table><h3 id="post-urls" tabindex="-1"><a class="header-anchor" href="#post-urls" aria-hidden="true">#</a> <code>POST /urls</code></h3><p>Add a URL to the API. This is an authenticated route.</p><p>Request:</p><table><thead><tr><th>Name</th><th>Required</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>url</td><td>yes</td><td>string</td><td>-</td><td>The url to add.</td></tr><tr><td>category</td><td>no</td><td>string</td><td>&quot;phishing&quot;</td><td>The category of the url.</td></tr></tbody></table><h3 id="get-urls-url" tabindex="-1"><a class="header-anchor" href="#get-urls-url" aria-hidden="true">#</a> <code>GET /urls/:url</code></h3><p>Get information about a specific URL.</p><p>Query parameters:</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>detailed</td><td>bool</td><td>false</td><td>Include URL metadata in the response.</td></tr></tbody></table><p>Returns: A <a href="#url">URL</a> object with <code>meta</code> set if <code>detailed</code> is <code>true</code>.</p><h3 id="patch-urls-url" tabindex="-1"><a class="header-anchor" href="#patch-urls-url" aria-hidden="true">#</a> <code>PATCH /urls/:url</code></h3><p>Update a URL. This is an authenticated route.</p><p>Request:</p><table><thead><tr><th>Name</th><th>Required</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>category</td><td>no</td><td>string</td><td>-</td><td>The new category of the url. See <a href="#categories">Categories</a>.</td></tr></tbody></table><p>Returbns: A <a href="#url">URL</a> object with <code>meta</code> set to null.</p><h3 id="patch-urls-url-metadata" tabindex="-1"><a class="header-anchor" href="#patch-urls-url-metadata" aria-hidden="true">#</a> <code>PATCH /urls/:url/metadata</code></h3><p>Update a URL&#39;s metadata. This is an authenticated route.</p><p>Request: A <a href="#urlmetadata">URLMetadata</a> object.</p><p>Returns: A <a href="#urlmetadata">URLMetadata</a> object.</p><h3 id="delete-urls-url" tabindex="-1"><a class="header-anchor" href="#delete-urls-url" aria-hidden="true">#</a> <code>DELETE /urls/:url</code></h3><p>Delete a URL from the API. This is an authenticated route.</p><hr><h2 id="types" tabindex="-1"><a class="header-anchor" href="#types" aria-hidden="true">#</a> Types</h2><h3 id="categories" tabindex="-1"><a class="header-anchor" href="#categories" aria-hidden="true">#</a> Categories</h3><ul><li><code>phishing</code></li><li><code>safe</code></li><li><code>malware</code></li></ul><h3 id="domain" tabindex="-1"><a class="header-anchor" href="#domain" aria-hidden="true">#</a> Domain</h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>domain</td><td>string</td><td>The domain name.</td></tr><tr><td>category</td><td>string</td><td>The domain category.</td></tr><tr><td>apex</td><td>bool</td><td>Whether all subdomains of the apex fall under the category provided.</td></tr><tr><td>meta</td><td><a href="#domainmetadata">DomainMetadata</a>?</td><td>Optional metadata associated with the domain.</td></tr></tbody></table><h3 id="domainmetadata" tabindex="-1"><a class="header-anchor" href="#domainmetadata" aria-hidden="true">#</a> DomainMetadata</h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>path</td><td>string?</td><td>The path a domain was detected with.</td></tr><tr><td>urlscan</td><td>string?</td><td>The URLScan detection result URL for the domain.</td></tr><tr><td>active</td><td>string?</td><td>When the domain was last confirmed to be active as an ISO8601 datetime.</td></tr><tr><td>target</td><td>string?</td><td>The target of a phishing domain.</td></tr></tbody></table><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> URL</h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>url</td><td>string</td><td>The URL.</td></tr><tr><td>category</td><td>string</td><td>The URL category.</td></tr><tr><td>meta</td><td><a href="#urlmetadata">URLMetadata</a>?</td><td>Optional metadata associated with the URL.</td></tr></tbody></table><h3 id="urlmetadata" tabindex="-1"><a class="header-anchor" href="#urlmetadata" aria-hidden="true">#</a> URLMetadata</h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>urlscan</td><td>string?</td><td>The URLScan detection result URL for the url.</td></tr><tr><td>active</td><td>string?</td><td>When the URL was last confirmed to be active as an ISO8601 datetime.</td></tr><tr><td>target</td><td>string?</td><td>The target of a phishing URL.</td></tr></tbody></table>',71),i=[h];function o(n,s){return e(),a("div",null,i)}var l=t(r,[["render",o],["__file","api.html.vue"]]);export{l as default};
